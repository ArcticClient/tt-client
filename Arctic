#nop NOTE: Nothing in this file needs manual editing.;
#nop Put manual overrides in the Preferences file.;

#nop Setup defaults for Arctic scripts;
#CLASS defaults kill;
#CLASS defaults open;
#nop Change this if you want the 'enter' key to send the last command;
#nop Note that this makes browsing paginated input (browse command, news, etc) difficult.
#CONFIG {REPEAT ENTER} {OFF}
#nop This prevents multiple colors on one line from breaking color
#CONFIG {COLOR PATCH} {on}
#nop This alias is used for automatically resizing/redrawing the screen.
#ALIAS setscreen {opt col $cols;redraw;#unticker screenupdate;};
#CLASS defaults close;
#nop End default TinTin configuration;

#nop This splits the screen to provide a messaging window at the top.
#split 10;

#class events kill;
#class events open;
#event {SCREEN RESIZE} {#screen get cols cols; #ticker screenupdate {setscreen} {2};};
#event {SESSION ACTIVATED} {redraw;#showme {If you don't see anything here, you may need to hit PGUP and then PGDOWN to refresh the screen.};};
#nop Messaging forwarding;
#EVENT {SESSION DISCONNECTED} { #unvar sessionname; #write Preferences };
#EVENT {SESSION CONNECTED} { #var sessionname {%0} };
#class events close;

#nop Defaults for Arctic Scripts;
#nop If you want to change these, you should use the 'arctic' command in game;
#nop If you want to use a hungry/thirsty command with multiple components, for example;
#nop something like "get all.food pack;eat all.food", then change it in your Preferences file.
#var hungrycommand {eat all.food};
#var thirstycommand {drink all.water};
#var ticker {1};
#var usealiases {1};
#var useactions {1};
#var usesubs {1};
#var autostand {1};
#var autosplit {1};
#nop Read Preferences here so we can determine whether to load the defaults or not;
#read Preferences;
#if {&usealiases && $usealiases == 1} #read Arctic_Aliases.txt;
#if {&useactions && $useactions == 1} #read TINTIN_Arctic_Actions.txt;
#if {&usesubs && $usesubs == 1} #read TINTIN_Arctic_Highlights_Subs.txt;
#nop End defaults for Arctic Scripts;


#nop Aliases for controlling two characters
#nop This lets you send 'y' to the game as a prompt response if no argument is given.
#class multi_commands kill;
#class multi_commands open;
#alias {second_char_command}
{
	#if { "%1" == "" } { #send $second_char_alias; };
	#nop This is the actual command control the second character: #ic a %0;
	#else { #ic a %0};
};
#alias {both_chars_command}
{
	#if { "%1" == "" } { #send $both_chars_alias; };
	#nop This is the actual command to control both characters: #ic b %0;
	#else { #ic b %0};
};
#class multi_commands close;
#alias {y} {#nop Change this with the 'arctic' command in game, not in the Preferences file.;second_char_command %0};
#alias {v} {#nop Change this with the 'arctic' command in game, not in the Preferences file.;both_chars_command %0};

#var {second_char_alias} {y};
#var {both_chars_alias} {v};

#nop Messaging window and actions to capure tells, etc;
#CLASS window kill;
#CLASS window open
   #screen get cols cols;
	#VARIABLE {window}
   {
       {1} {}
       {2} {}
       {3} {}
       {4} {}
       {5} {}
       {6} {}
       {7} {}
       {8} {}
       {9} {}
       {10} {}
       {11} {}
   };

#ALIAS {commwindow}
{
	#list window del 1;
	#list window ins -1 {%0};
	#draw white unicode rounded box 1 1 10 $cols $window[-10..-1];
};

#ALIAS {redraw}
{
	#showme Redrawing Tintin++ windows.;
	#draw white unicode rounded box 1 1 10 $cols $window[-10..-1];
};

#ACTION {^{\^[a-zA-Z]+|\*\*[a-zA-Z]+|\*[a-zA-Z]+|\<[a-zA-Z]+}{:\s|\ssays\s'|\stells you\s'|\sshouts\s'|\syells\s'|\swhispers to you,\s'|\stells your group '}{?!added to your spell list}{.+}{\>|\*|}} {
	#format {time} {%t} {%H:%M};
   #ats {commwindow $sessionname $time: %1%2%3%4};
	#nop TODO add a format with padding here;
	#ic a commwindow $sessionname $time: %1%2%3%4;
};
#class window close;

#CLASS arctic kill;
#CLASS arctic open;
#ALIAS arctic
{
	#class aliases size alias_size;
	#class actions size actions_size;
	#class subs size subs_size;
	#switch {"%1"}
		{
		#case "autosplit"
			{
			#if {!&autosplit || $autosplit == 0}
				{
				#if {$useactions == 1}
					{
					#showme Enabling autosplit.;
					#var autosplit 1;
					#write Preferences;
					};
				#else
					{
					#showme Enable Arctic's default actions with \"arctic actions\" first.;
					};
				};
			#else
				{
				#showme Disabling autosplit.;
				#var autosplit 0;
				#write Preferences;
				};
			};
		#case "autostand"
			{
			#if {!&autostand || $autostand == 0}
				{
				#if {$useactions == 1}
					{
					#showme Enabling autostand.;
					#var autostand 1;
					#write Preferences;
					};
				#else
					{
					#showme Enable Arctic's default actions with \"arctic actions\" first.;
					};
				};
			#else
				{
				#showme Disabling autostand.;
				#var autostand 0;
				#write Preferences;
				};
			};
		#case "second"
			{
			#switch {"%2"}
				{
				#case {""}
					{
					#showme \r\nCurrent alias to send commands to the second character is "$second_char_alias".\r\n;
					};
				#default
					{
					#showme \r\nChanging alias to send commands to the second character to "%2".;
					#unalias {$second_char_alias};
					#var second_char_alias {%2};
					#alias {$second_char_alias} {#nop Change this with the 'arctic' command in game, not in the Preferences file.;$second_char_comand};
					#write Preferences;
					};
				};
			};
		#case "both"
			{
			#switch {"%2"}
				{
				#case {""}
					{
					#showme \r\nCurrent alias to send commands to both characters simultaneously is "$both_chars_alias".\r\n;
					};
				#default
					{
					#showme \r\nChanging alias to send commands to both characters simultaneously to "%2".;
					#unalias {$both_chars_alias};
					#var both_chars_alias {%2};
					#alias {$both_chars_alias} {#nop Change this with the 'arctic' command in game, not in the Preferences file.;$both_chars_comand};
					#write Preferences;
					};
				};
			};
		#case "ticker"
			{
			#if {$ticker == 1}
				{
				#showme {};
				#showme Disabling 10-second tick warning.;
				#var ticker 0;
				#unticker TICK;
				#write Preferences;
				};
			#else
				{
				#showme {};
				#showme Enabling 10-second tick warning.;
				#var ticker 1;
				#write Preferences;
				};
			};
		#case "thirsty"
			{
			#switch {%2}
				{
				#if {"%2" == ""}
					{
					#showme {};
					#if {"$thirstycommand" != "#nop"} #showme Thirsty trigger command is \"$thirstycommand\";
					#else	#showme Thirsty trigger command is disabled.;
					#showme Change this with \"arctic thirsty <command>\" or \"arctic thirsty off\" to disable.;
					};
				#elseif {"%2" == "off"}
					{
					#showme {};
					#showme Disabling thirsty trigger.;
					#var thirstycommand {#nop};
					#line gag;
					#write Preferences;
					};
				#else
					{
					#format thirstycommand {%p} {%2 %3 %4 %5};
					#showme {};
					#showme New thirsty command is "$thirstycommand";
					#line gag;
					#write Preferences;
					};
				};
			};
		#case "hungry"
			{
			#switch {%2}
				{
				#if {"%2" == ""}
					{
					#showme {};
					#if {"$hungrycommand" != "#nop"} #showme Hungry trigger command is \"$hungrycommand\";
					#else	#showme Hungry trigger command is disabled.;
					#showme Change this with \"arctic hungry <command>\" or \"arctic hungry off\" to disable.;
					};
				#elseif {"%2" == "off"}
					{
					#showme {};
					#showme Disabling hungry trigger.;
					#var hungrycommand {#nop};
					#line gag;
					#write Preferences;
					};
				#else
					{
					#format hungrycommand {%p} {%2 %3 %4 %5};
					#showme {};
					#showme New hungry command is "$hungrycommand";
					#line gag;
					#write Preferences;
					};
				};
			};
		#case "aliases"
			{
			#if {$alias_size == 0}
				{
				#showme {};
				#showme {Enabling Arctic aliases.};
				#read Arctic_Aliases.txt;
				#var usealiases 1;
				#write Preferences;
				};
			#else
				{
				#showme {};
				#showme {Disabling Arctic aliases.};
				#class aliases kill;
				#var usealiases 0;
				#write Preferences;
				};
			};
		#case "actions"
			{
			#if {$actions_size == 0}
				{
				#showme {};
				#showme {Enabling Arctic actions.};
				#read TINTIN_Arctic_Actions.txt;
				#var useactions 1;
				#write Preferences;
				};
			#else
				{
				#showme {};
				#showme {Disabling Arctic actions.};
				#class actions kill;
				#var useactions 0;
				#write Preferences;
				};
			};
		#case "subs"
			{
			#if {$subs_size == 0}
				{
				#showme {};
				#showme {Enabling Arctic substitions and highlights.};
				#read TINTIN_Arctic_Highlights_Subs.txt;
				#var usesubs 1;
				#write Preferences;
				};
			#else
				{
				#showme {};
				#showme {Disabling Arctic substitutions and highlights.};
				#class subs kill;
				#var usesubs 0;
				#write Preferences;
				};
			};
		#default
			{
			#showme {};
			#showme {Arctic scripts information:};
			#if {$alias_size == 0} {#showme Aliases not loaded.};
			#else {#showme Aliases loaded: $alias_size};
			#if {$actions_size == 0} {#showme Actions not loaded.};
			#else {#showme Actions loaded: $actions_size};
			#if {$subs_size == 0} {#showme Highlights/Substitutions not loaded.};
			#else {#showme Highlights/Substitutions loaded: $subs_size};
			#showme {};
			#if {"$thirstycommand" != "#nop"} #showme Thirsty command: $thirstycommand;
			#else #showme Thirsty trigger disabled;
			#if {"$hungrycommand" != "#nop"} #showme Hungry command: $hungrycommand;
			#else #showme Hungry trigger disabled;
			#if {&ticker && $ticker == 1} {#showme 10-second tick warning is enabled.};
			#else #showme 10-second tick warning is disabled.;
			#if {&autosplit && $autosplit == 1 && $useactions == 1}
				{
				#showme {Autosplit is enabled.};
				};
			#elseif {&autosplit && $autosplit == 0}
				{
				#showme {Autosplit is disabled.};
				};
			#elseif {$useactions == 0 || !&useactions}
				{
				#showme {Autosplit is disabled because Arctic's default actions are disabled.};
				};
			#elseif {!&autosplit}
				{
				#local actionssize 0;
				#class actions size actionssize;
				#if {$actionssize == 0}
					{
					#showme {Autosplit is undefined and Arctic actions are disabled anyways.};
					};
				#else
					{
					#showme {Autosplit variable is undefined.  Type 'arctic autosplit' to fix this.};
					};
				};
			#if {&autostand && $autostand == 1 && $useactions == 1}
				{
				#showme {Autostand is enabled.};
				};
			#elseif {&autostand && $autostand == 0}
				{
				#showme {Autostand is disabled.};
				};
			#elseif {$useactions == 0 || !&useactions}
				{
				#showme {Autostand is disabled because Arctic's default actions are disabled.};
				};
			#elseif {!&autostand}
				{
				#local actionssize 0;
				#class actions size actionssize;
				#if {$actionssize == 0}
					{
					#showme {Autostand is undefined and Arctic actions are disabled anyways.};
					};
				#else
					{
					#showme {Autostand variable is undefined.  Type 'arctic autostand' to fix this.};
					};
				};
			#showme {Second character command: $second_char_alias};
			#showme {Both characters command: $both_chars_alias};
			#showme {Syntax: arctic <aliases/actions/subs/hungry/thirsty/ticker/second/both/autostand/autosplit>};
			};
		};
	#unvar alias_size;
	#unvar actions_size;
	#unvar subs_size;
}

#act {^Welcome to the land of Krynn.} 
{
	#showme {};
	#showme {<067>Welcome to the TinTin++ Arctic Scripts!<099>\r\n<067>Use the \"arctic\" command for script-specific configuration.<099>\r\n};
	#showme {};
};
#CLASS arctic close; 

#nop Read Preferences last to overwrite any of the defaults set above.;
#READ Preferences
